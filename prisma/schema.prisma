generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String    @default("user")
  accounts      Account[]
  horses        Horse[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Horse {
  id              String   @id @default(cuid())
  name            String
  chipId          String?
  description     String?
  number          String?
  origin          String?
  percentage      String?
  ancestry        String?
  brand           String?
  age             String?
  gender          String?
  status          String?
  province        String?
  district        String?
  originalOwner   String?
  currentOwner    String?
  acquisitionYear String?
  listedYear      String?
  imageUrl        String?
  share           String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  registeredAt    DateTime @default(now())
  userId          String?
  ownerId         String?
  Owner           Owner?   @relation(fields: [ownerId], references: [id])
  user            User?    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model Owner {
  id        String   @id @default(cuid())
  name      String
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  horses    Horse[]
}
